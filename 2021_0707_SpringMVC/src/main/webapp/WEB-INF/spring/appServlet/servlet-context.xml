<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	 	 <resources mapping="/resources/**" location="/resources/" /> 
	<!-- <resources mapping="/**" location="/" /> -->
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- Spring에서 관리하는 Component를 자동생성 
		Auto-detecting : 해당위치(package)에서 component검색해서 발견되면 생성해라
		
		@Component
		 ㄴ@Comtroller
		 ㄴ@Service
		 ㄴ@Repository
	
	아래 첫번째 방법으로 하자	
	-->
	<context:component-scan base-package="dao" />
	<context:component-scan base-package="service" />
	<context:component-scan base-package="com.increpas.mvc" />
	
	<!-- <context:component-scan base-package="dao,service,com.increpas.mvc" /> -->
	
</beans:beans>
